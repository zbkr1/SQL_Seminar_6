/*
таблица users_old,аналоговая таблица users.
вычислить, с помощью которого можно переместить любого (одного) пользователя из таблицы users в таблицу users_old.
(использование оценки с выбором фиксации или отката – обязательно).
*/

УДАЛИТЬ  ТАБЛИЦУ , ЕСЛИ СУЩЕСТВУЕТ users_old;
СОЗДАТЬ  ТАБЛИЦУ  users_old (
	id INT  PRIMARY KEY auto_increment,
    имя varchar ( 50 ),
    фамилия varchar ( 50 ),
    электронная почта varchar ( 120 )
);

РАЗДЕЛИТЕЛЬ $$
ОТМЕНИТЬ ПРОЦЕДУРУ, ЕСЛИ СУЩЕСТВУЕТ двигаться;
СОЗДАТЬ ПРОЦЕДУРУ двигаться ( IN num1 INT )
	ДЕТЕРМИНИСТИЧЕСКИЙ
НАЧИНАТЬ
ВСТАВИТЬ В users_old (имя,фамилия,электронная почта)
ВЫБЕРИТЕ имя, фамилию, адрес электронной почты
	ОТ пользователей
	ГДЕ  пользователи . идентификатор  = число1;
УДАЛИТЬ  ОТ пользователей
	ГДЕ идентификатор = число1;
СОВЕРШИТЬ ;
END$$

РАЗДЕЛИТЕЛЬ ;

ВЫЗВАТЬ ход( 7 ); -- Проверяем.



/*
2. настроить хранимую функцию hello(), которая будет возвращать приветствие, в зависимости от настроений времени суток.
С 6:00 до 12:00 функция должна возвращать фразу "Доброе утро", с 12:00 до 18:00 функция должна возвращать фразу "Добрый день",
с 18:00 до 00:00 — «Добрый вечер», с 00:00 до 6:00 — «Доброй ночи».
*/

РАЗДЕЛИТЕЛЬ $$
СОЗДАТЬ  ФУНКЦИЮ  привет ()
	ВОЗВРАЩАЕТ ВАРЧАР ( 25 )
	ДЕТЕРМИНИСТИЧЕСКИЙ
НАЧИНАТЬ
ОБЪЯВИТЬ результирующий_текст VARCHAR ( 25 );
ВЫБЕРИТЕ ДЕЛО
	WHEN CURRENT_TIME  >=  ' 12:00:00 '  AND   CURRENT_TIME  <  ' 18:00:00 ' THEN ' Добрый день '
	WHEN CURRENT_TIME  >=  ' 06:00:00 '  AND   CURRENT_TIME  <  ' 12:00:00 ' THEN ' Доброе утро '
	WHEN CURRENT_TIME  >=  ' 00:00:00 '  AND   CURRENT_TIME  <  ' 06:00:00 ' THEN ' Доброй ночи '
	ЕЩЕ ' Добрый вечер '
END INTO результат_текст;
ВОЗВРАТ результат_текст;
END$$

РАЗДЕЛИТЕЛЬ ;

ВЫБЕРИТЕ привет(); -- Проверяем.

/* 
3. (по желанию)* настроить таблицу журналов типа Архив. Пусть при каждом создании записей в таблицах пользователей,
сообщества и сообщения в журналах таблицы помещается время и дата создания, название
таблица, предварительный ключ ключа.
*/

УДАЛИТЬ  ТАБЛИЦУ , ЕСЛИ Журналы СУЩЕСТВУЮТ;

 Журналы СОЗДАНИЯ ТАБЛИЦЫ  (
    created_at ДАТАВРЕМЯ ПО УМОЛЧАНИЮ сейчас(),
    имя_таблицы VARCHAR ( 20 ) НЕ NULL ,
    pk_id INT UNSIGNED NOT NULL
) ДВИГАТЕЛЬ = АРХИВ;

СОЗДАВАТЬ
    TRIGGERusers_log
ПОСЛЕ ВСТАВКИ НА пользователей ДЛЯ КАЖДОЙ СТРОКИ
    ВСТАВЬТЕ В журналы SET table_name =  ' users ' , pk_id =  NEW . идентификатор ;

СОЗДАВАТЬ
    TRIGGER сообщества_журнал
ПОСЛЕ ВСТАВКИ НА сообщества ДЛЯ КАЖДОЙ СТРОКИ
    ВСТАВЬТЕ В журналы SET table_name =  ' communities ' , pk_id =  NEW . идентификатор ;

СОЗДАВАТЬ
    TRIGGER messages_log
ПОСЛЕ ВСТАВКИ НА сообщения ДЛЯ КАЖДОЙ СТРОКИ
    ВСТАВЬТЕ В журналы SET table_name =  ' messages ' , pk_id =  NEW . идентификатор ;

